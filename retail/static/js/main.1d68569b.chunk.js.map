{"version":3,"sources":["Login.js","Dashboard.js","Stock.js","Orders.js","Sales.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","loginCheck","state","email","pass","setState","msg","mydata","FormData","append","axios","post","then","response","data","id","sessionStorage","setItem","name","window","location","reload","handelEmail","event","target","value","handelPass","className","this","type","class","onChange","onClick","Component","Dashboard","getDashboard","get","dashboard","getItem","totalorder","delivered","processing","cancel","stock","todaysale","totalsale","Stock","getProduct","productList","message","length","save","formData","price","quantity","status","handleName","handlePrice","handleQuantity","deleteProduct","index","input","map","row","pid","qty","href","bind","Orders","getOrder","orderlist","pname","indprice","console","log","totprice","handleCname","cname","handleMobile","mobile","changeState","orderId","readOnly","key","orderid","product","priceperunit","Sales","logout","clear","App","to","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.1d68569b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            pass: '',\r\n            msg: ''\r\n        }\r\n    }\r\n\r\n    loginCheck = () => {\r\n\r\n        if ((this.state.email != \"\") && (this.state.pass != \"\")) {\r\n            this.setState({\r\n                msg: \"Please wait processing...\"\r\n            })\r\n            var url = \"https://www.firstenquiry.com/api/react/store/auth.php\";\r\n            let mydata = new FormData();\r\n            mydata.append(\"email\", this.state.email);\r\n            mydata.append(\"pass\", this.state.pass);\r\n            axios.post(url, mydata).then(response => {\r\n                if (response.data.id == \"\") {\r\n                    this.setState({\r\n                        msg: \"Invalid or not exists...\"\r\n                    })\r\n                } else {\r\n                    sessionStorage.setItem(\"id\", response.data.id);\r\n                    sessionStorage.setItem(\"username\", response.data.name);\r\n                    window.location.reload();\r\n                }\r\n            })\r\n            //        store1@gmail.com / 123\r\n\r\n        } else {\r\n            this.setState({\r\n                msg: \"Invalid input...\"\r\n            })\r\n        }\r\n    }\r\n\r\n    handelEmail = (event) => {\r\n        this.setState({\r\n            email: event.target.value\r\n        })\r\n    }\r\n\r\n    handelPass = (event) => {\r\n        this.setState({\r\n            pass: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\"></div>\r\n                <div className=\"col-md-4\"><br /><br />\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header bg-secondary text-white\">Login</div>\r\n                        <div className=\"card-body\">\r\n                            <p className=\"text-danger text-center\">{this.state.msg}</p>\r\n                            <div className=\"form-group\">\r\n                                <label>e-Mail</label>\r\n                                <input type=\"text\" class=\"form-control\" onChange={this.handelEmail} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Password</label>\r\n                                <input type=\"password\" class=\"form-control\" onChange={this.handelPass} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-footer text-center\">\r\n                            <button className=\"btn btn-primary\" onClick={this.loginCheck}>Login</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-4\"></div>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Dashboard extends Component {\r\n   constructor() {\r\n      super();\r\n      this.state = {\r\n         dashboard: []\r\n      }\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.getDashboard();\r\n   }\r\n\r\n   getDashboard = () => {\r\n      let url = \"https://www.firstenquiry.com/api/react/store/dashboard.php\";\r\n      axios.get(url).then(response => {\r\n         this.setState({\r\n            dashboard: response.data\r\n         })\r\n      })\r\n   }\r\n\r\n   render() {\r\n      return <div className=\"container\">\r\n         <div className=\"row form-group\">\r\n            <div className=\"col-md-12 text-center\">\r\n               <h2 className=\"text-warning p-3\">Welcome , {sessionStorage.getItem(\"username\")} </h2>\r\n            </div>\r\n         </div>\r\n         <div className=\"row text-center\">\r\n            <div className=\"col-md-3 form-group\">\r\n               <div className=\"border p-3\">\r\n                  <i className=\"fa fa-headset fa-2x text-success\"></i>\r\n                  <h4> Received Orders  </h4>\r\n                  <p className=\"text-danger\">{this.state.dashboard.totalorder}</p>\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-3 form-group\">\r\n               <div className=\"border p-3\">\r\n                  <i className=\"fa fa-truck fa-2x text-info\"></i>\r\n                  <h4> Orders Delivered </h4>\r\n                  <p className=\"text-danger\">{this.state.dashboard.delivered}</p>\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-3 form-group\">\r\n               <div className=\"border p-3\">\r\n                  <i className=\"fa fa-spinner fa-spin fa-2x text-primary\"></i>\r\n                  <h4> Orders in Process </h4>\r\n                  <p className=\"text-danger\">{this.state.dashboard.processing}</p>\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-3 form-group\">\r\n               <div className=\"border p-3\">\r\n                  <i className=\"fa fa-sitemap fa-2x text-warning\"></i>\r\n                  <h4> Cancel Order </h4>\r\n                  <p className=\"text-danger\">{this.state.dashboard.cancel}</p>\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-3 form-group\">\r\n               <div className=\"border p-3\">\r\n                  <i className=\"fa fa-sitemap fa-2x text-warning\"></i>\r\n                  <h4> Items in Stock </h4>\r\n                  <p className=\"text-danger\">{this.state.dashboard.stock}</p>\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-3 form-group\">\r\n               <div className=\"border p-3\">\r\n                  <i className=\"fa fa-cart-plus fa-2x text-primary\"></i>\r\n                  <h4> Today Sales </h4>\r\n                  <p className=\"text-danger\">{this.state.dashboard.todaysale}</p>\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"col-md-3 form-group\">\r\n               <div className=\"border p-3\">\r\n                  <i className=\"fa fa-people-carry fa-2x text-success\"></i>\r\n                  <h4> Total Sales </h4>\r\n                  <p className=\"text-danger\">{this.state.dashboard.totalsale}</p>\r\n               </div>\r\n            </div>\r\n\r\n         </div>\r\n      </div>;\r\n   }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class Stock extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            productList: [],\r\n            message: '',\r\n            name: '',\r\n            price: 0,\r\n            quantity: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getProduct();\r\n    }\r\n\r\n    getProduct = () => {\r\n        let url = \"https://www.firstenquiry.com/api/react/store/allproduct.php\";\r\n        axios.get(url).then(response => {\r\n            this.setState({\r\n                productList: response.data,\r\n                message: \"Total Products - \" + response.data.length\r\n            })\r\n        })\r\n    }\r\n\r\n    save = () => {\r\n        this.setState({\r\n            message: \"Please wait processing...\"\r\n        })\r\n        let formData = new FormData();\r\n        formData.append(\"pname\", this.state.name);\r\n        formData.append(\"price\", this.state.price);\r\n        formData.append(\"quantity\", this.state.quantity);\r\n        let url = \"https://www.firstenquiry.com/api/react/store/saveproduct.php\";\r\n        axios.post(url, formData).then(response => {\r\n            this.setState({\r\n                message: response.data.status,\r\n                name: '',\r\n                price: 0,\r\n                quantity: 0\r\n            })\r\n            this.getProduct(); //to reload the product list\r\n        })\r\n    }\r\n\r\n    handleName = (event) => {\r\n        this.setState({\r\n            name: event.target.value\r\n        })\r\n    }\r\n\r\n    handlePrice = (event) => {\r\n        this.setState({\r\n            price: event.target.value\r\n        })\r\n    }\r\n\r\n    handleQuantity = (event) => {\r\n        this.setState({\r\n            quantity: event.target.value\r\n        })\r\n    }\r\n\r\n    deleteProduct = (index) => {\r\n        this.setState({\r\n            message: \"Please wait processing...\"\r\n        })\r\n        let input = new FormData();\r\n        input.append(\"id\", index);\r\n        let url = \"https://www.firstenquiry.com/api/react/store/deleteproduct.php\";\r\n        axios.post(url, input).then(response => {\r\n            this.setState({\r\n                message: response.data.status\r\n            })\r\n            this.getProduct();\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h3 className=\"text-center text-secondary p-3\">Stock Management</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row form-group\">\r\n                    <div className=\"col-md-1\"></div>\r\n                    <div className=\"col-md-3\">\r\n                        <i>Product Name</i>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.name} onChange={this.handleName} />\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                        <i>Product Price / Unit</i>\r\n                        <input type=\"number\" className=\"form-control\" value={this.state.price} onChange={this.handlePrice} />\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                        <i>Product Quantity</i>\r\n                        <input type=\"number\" className=\"form-control\" value={this.state.quantity} onChange={this.handleQuantity} />\r\n                    </div>\r\n                    <div className=\"col-md-1\"><br />\r\n                        <button className=\"btn btn-primary btn-sm\" onClick={this.save}>Save</button></div>\r\n                    <div className=\"col-md-1\"></div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-1\"></div>\r\n                    <div className=\"col-md-10\">\r\n                        <p className=\"text-center text-primary\">{this.state.message}</p>\r\n                        <table className=\"table table-striped table-sm text-center\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>P-id</th>\r\n                                    <th>Product Name</th>\r\n                                    <th>Product Price</th>\r\n                                    <th>Product quantity</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.productList.map((row, index) => {\r\n                                        return <tr>\r\n                                            <td>{row.pid}</td>\r\n                                            <td>{row.name}</td>\r\n                                            <td>Rs. {row.price}</td>\r\n                                            <td>{row.qty}</td>\r\n                                            <td><a href=\"javascript:void(0)\" onClick={this.deleteProduct.bind(this, row.pid)}><i className=\"fa fa-trash text-danger fa-lg\"></i></a></td>\r\n                                        </tr>\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"col-md-1\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class Orders extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            productList: [],\r\n            orderlist: [],\r\n            message: '',\r\n            pname: '',\r\n            indprice: 0,\r\n            totprice: 0,\r\n            quantity: 0,\r\n            cname: '',\r\n            mobile: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getOrder();\r\n        this.getProduct();\r\n    }\r\n\r\n    getOrder = () => {\r\n        let url = \"https://www.firstenquiry.com/api/react/store/orderlist.php\";\r\n        axios.get(url).then(response => {\r\n            this.setState({\r\n                orderlist: response.data,\r\n                message: \"Total Products - \" + response.data.length\r\n            })\r\n        })\r\n    }\r\n\r\n    getProduct = () => {\r\n        let url = \"https://www.firstenquiry.com/api/react/store/allproduct.php\";\r\n        axios.get(url).then(response => {\r\n            this.setState({\r\n                productList: response.data\r\n            })\r\n        })\r\n    }\r\n\r\n    handleName = (index) => {\r\n        this.setState({\r\n            pname: this.state.productList[index].name,\r\n            indprice: this.state.productList[index].price\r\n        })\r\n    }\r\n\r\n    handleQuantity = (event) => {\r\n        console.log(event.target.value);\r\n        this.setState({\r\n            quantity: event.target.value,\r\n            totprice: this.state.indprice * event.target.value\r\n        })\r\n    }\r\n\r\n    handleCname = (event) => {\r\n        this.setState({\r\n            cname: event.target.value\r\n        })\r\n    }\r\n\r\n    handleMobile = (event) => {\r\n        this.setState({\r\n            mobile: event.target.value\r\n        })\r\n    }\r\n\r\n    save = () => {\r\n        this.setState({\r\n            message: \"Please wait processing...\"\r\n        })\r\n        let formData = new FormData();\r\n        formData.append(\"customer\", this.state.cname);\r\n        formData.append(\"mobile\", this.state.mobile);\r\n        formData.append(\"product\", this.state.pname);\r\n        formData.append(\"qty\", this.state.quantity);\r\n        formData.append(\"totprice\", this.state.totprice);\r\n        formData.append(\"indprice\", this.state.indprice);\r\n        let url = \"https://www.firstenquiry.com/api/react/store/saveorder.php\";\r\n        axios.post(url, formData).then(response => {\r\n            this.setState({\r\n                message: response.data.status,\r\n                pname: '',\r\n                indprice: 0,\r\n                totprice: 0,\r\n                quantity: 0,\r\n                cname: '',\r\n                mobile: ''\r\n            })\r\n            this.getOrder();\r\n        })\r\n    }\r\n\r\n    changeState = (orderId, value) => {\r\n        this.setState({\r\n            message: \"Please wait processing...\"\r\n        })\r\n        let formData = new FormData();\r\n        formData.append(\"orderid\", orderId);\r\n        formData.append(\"value\", value);\r\n        let url = \"https://www.firstenquiry.com/api/react/store/changeorder.php\";\r\n        axios.post(url, formData).then(response => {\r\n            this.setState({\r\n                message: response.data.status\r\n            })\r\n            this.getOrder();\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <h3 className=\"text-secondary\">Order Management</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3 p-2 border\">\r\n                        <h4 className=\"text-danger text-center\">New Order</h4>\r\n                        <div className=\"form-group\">\r\n                            <lable>Customer Name</lable>\r\n                            <input type=\"text\" className=\"form-control\" value={this.state.cname} onChange={this.handleCname} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <lable>Customer Mobile No</lable>\r\n                            <input type=\"number\" className=\"form-control\" value={this.state.mobile} onChange={this.handleMobile} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <lable>Product</lable>\r\n                            <select className=\"form-control\">\r\n                                <option value=\"\">Choose</option>\r\n                                {\r\n                                    this.state.productList.map((row, index) => {\r\n                                        return <option onClick={this.handleName.bind(this, index)}>{row.name}</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <lable>Product Quantity</lable>\r\n                            <input type=\"number\" className=\"form-control\" value={this.state.quantity} onChange={this.handleQuantity} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <lable>Total Price</lable>\r\n                            <input readOnly=\"readonly\" type=\"number\" className=\"form-control\" value={this.state.totprice} />\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <button className=\"btn btn-danger btn-sm\" onClick={this.save}>Place Order</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-9\">\r\n                        <h4 className=\"text-success text-center\">Order List - {this.state.message}</h4>\r\n                        <table className=\"table table-stripped table-sm\">\r\n                            <thead>\r\n                                <tr className=\"tex-secondary\">\r\n                                    <th>Order No</th>\r\n                                    <th>C-Name</th>\r\n                                    <th>C-Mobile</th>\r\n                                    <th>Product</th>\r\n                                    <th>Qty</th>\r\n                                    <th>price/Unit</th>\r\n                                    <th>Total Price</th>\r\n                                    <th>Status</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.orderlist.map((row, index) => {\r\n                                        return <tr key={index}>\r\n                                            <td>{row.orderid}</td>\r\n                                            <td>{row.cname}</td>\r\n                                            <td>{row.mobile}</td>\r\n                                            <td>{row.product}</td>\r\n                                            <td>{row.qty}</td>\r\n                                            <td>{row.priceperunit}</td>\r\n                                            <td>{row.price}</td>\r\n                                            <td>\r\n                                                <select>\r\n                                                    <option value={row.status}>{row.status}</option>\r\n                                                    <option value=\"delivered\" onClick={this.changeState.bind(this, row.orderid, 'delivered')}>Delivered</option>\r\n                                                    <option value=\"cancel\" onClick={this.changeState.bind(this, row.orderid, 'cancel')}>Cancel</option>\r\n                                                    <option value=\"processing\" onClick={this.changeState.bind(this, row.orderid, 'processing')}>Processing</option>\r\n                                                </select>\r\n                                            </td>\r\n                                        </tr>\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class Sales extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            orderlist: [],\r\n            message: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getOrder();\r\n    }\r\n\r\n    getOrder = () => {\r\n        let url = \"https://www.firstenquiry.com/api/react/store/orderlist.php\";\r\n        axios.get(url).then(response => {\r\n            this.setState({\r\n                orderlist: response.data,\r\n                message: \"Total Products - \" + response.data.length\r\n            })\r\n        })\r\n    }\r\n\r\n    changeState = (value) => {\r\n        this.setState({\r\n            message: \"Please wait processing...\"\r\n        })\r\n        let formData = new FormData();\r\n        formData.append(\"value\", value);\r\n        let url = \"https://www.firstenquiry.com/api/react/store/orderlist.php\";\r\n        axios.post(url, formData).then(response => {\r\n            this.setState({\r\n                orderlist: response.data,\r\n                message: \"Orders loaded successfully !\"\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3\">\r\n                        <br />\r\n                        <select className=\"form-control\">\r\n                            <option value=\"All\" onClick={this.changeState.bind(this, 'All')}>All Sales</option>\r\n                            <option value=\"delivered\" onClick={this.changeState.bind(this, 'delivered')}>Delivered</option>\r\n                            <option value=\"cancel\" onClick={this.changeState.bind(this, 'cancel')}>Cancel</option>\r\n                            <option value=\"processing\" onClick={this.changeState.bind(this, 'processing')}>Processing</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"col-md-9 text-center\">\r\n                        <h3 className=\"text-secondary\">Order & Sales</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h4 className=\"text-success text-center\">Sales List - {this.state.message}</h4>\r\n                        <table className=\"table table-stripped table-sm\">\r\n                            <thead>\r\n                                <tr className=\"tex-secondary\">\r\n                                    <th>Order No</th>\r\n                                    <th>C-Name</th>\r\n                                    <th>C-Mobile</th>\r\n                                    <th>Product</th>\r\n                                    <th>Qty</th>\r\n                                    <th>price/Unit</th>\r\n                                    <th>Total Price</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.orderlist.map((row, index) => {\r\n                                        return <tr key={index}>\r\n                                            <td>{row.orderid}</td>\r\n                                            <td>{row.cname}</td>\r\n                                            <td>{row.mobile}</td>\r\n                                            <td>{row.product}</td>\r\n                                            <td>{row.qty}</td>\r\n                                            <td>{row.priceperunit}</td>\r\n                                            <td>{row.price}</td>\r\n                                        </tr>\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport { Route, HashRouter, Link } from 'react-router-dom';\nimport Login from './Login';\nimport Dashboard from './Dashboard';\nimport Stock from './Stock';\nimport Orders from './Orders';\nimport Sales from './Sales';\n\nconst logout = () => {\n  sessionStorage.clear();\n  window.location.href = './';\n}\n\nfunction App() {\n  if (sessionStorage.getItem(\"username\") == null) {\n\n    return <Login />\n\n  } else {\n\n    const mypage = <>\n      <HashRouter>\n        <nav className=\"navbar navbar-expand-sm bg-primary navbar-light\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link text-white\" to=\"/\"><i className=\"fa fa-cogs\"></i> Dashboard</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link text-white\" to=\"/stock\"><i className=\"fa fa-sitemap\"></i> Stock</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link text-white\" to=\"/orders\"><i className=\"fa fa-headset\"></i> Orders</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link text-white\" to=\"/sales\"><i className=\"fa fa-cart-plus\"></i> Sales</Link>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link text-white\" href=\"javascript:void(0)\" onClick={logout}>\n                Welcome , {sessionStorage.getItem(\"username\")}- : <i className=\"fa fa-power-off text-danger\"></i> Logout\n            </a>\n            </li>\n          </ul>\n        </nav>\n\n        <Route exact path=\"/\" component={Dashboard} />\n        <Route path=\"/stock\" component={Stock} />\n        <Route path=\"/orders\" component={Orders} />\n        <Route path=\"/sales\" component={Sales} />\n\n      </HashRouter>\n    </>;\n    return mypage;\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/fa/css/all.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}